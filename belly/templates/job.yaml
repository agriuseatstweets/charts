apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{- template "common.fullname" . -}}"
spec:
  schedule: "{{ .Values.schedule }}"
  jobTemplate:
    spec:
      completions: {{ .Values.completions }}
      parallelism: {{ .Values.parallelism }}
      backoffLimit: {{ .Values.backoffLimit }}
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            terminationMessagePolicy: FallbackToLogsOnError
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources:
              {{- toYaml .Values.resources | nindent 14}}
            env:
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: "/home/jupyter/work/keys/key.json"
              - name: BELLY_QUEUE
                value: "{{ .Values.queue.queue }}"
              - name: KAFKA_BROKERS
                value: "{{ .Values.queue.kafkaBrokers }}"
              - name: KAFKA_POLL_INTERVAL
                value: "{{ .Values.queue.kafkaPollInterval }}"
              - name: BELLY_TOPIC
                value: "{{ .Values.queue.topic }}"
              - name: BELLY_GROUP
                value: "{{ .Values.queue.group }}"
              - name: GOOGLE_PROJECT_ID
                value: "{{ .Values.queue.googleProjectId}}"
              - name: BELLY_LOCATION
                value: "{{ .Values.belly.location }}"
              - name: BELLY_SIZE
                value: "{{ .Values.belly.size }}"
              - name: BELLY_MINIMUM_SIZE
                value: "{{ .Values.belly.minimumSize }}"
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: "/home/jupyter/work/keys/key.json"
              - name: PARTITION_SIZE
                value: "{{ .Values.spark.partitionSize }}"
              - name: SPARK_DRIVER_MEMORY
                value: "{{ .Values.spark.driverMemory }}"

            volumeMounts:
              - name: keys
                mountPath: /home/jupyter/work/keys
                readOnly: true
          volumes:
            - name: keys
              secret:
                secretName: {{ .Values.keySecret }}
